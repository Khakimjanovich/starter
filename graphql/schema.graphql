"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    me: User @auth
    "get Users"
    users: [User!]! @paginate(defaultCount: 10)
    "get Single user by Id"
    user(id: ID @eq): User @find
    "get Roles"
    roles: [Role!]! @paginate(defaultCount: 10)
    "get a role by id"
    role(id: ID @eq): Role @find
    "get permissions"
    permissions: [Permission!]! @paginate(defaultCount: 10)
    "get permission by Id"
    permission(id: ID @eq): Permission @find
}

type Mutation {
    createUser(
        name: String!,
        avatar: String,
        email: String! @rules(apply: ["email","unique:users,email"]),
        password: String! @hash
    ): User @create(model: "App\\Models\\User") @guard
    updateUser(
        id: ID! @eq,
        name: String,
        avatar: String,
        email: String @rules(apply: ["email"]),
        password: String @hash
    ): User @update(model: "App\\Models\\User")
    deleteUser(
        id: ID! @eq
    ): User @delete(model: "App\\Models\\User")
    createRole(
        name: String!,
    ): Role @create(model: "App\\Models\\Role")
    updateRole(
        id: ID! @eq
        name: String!,
    ): Role @update(model: "App\\Models\\Role")
    deleteRole(
        id: ID! @eq
    ): Role @delete(model: "App\\Models\\Role")
    createPermission(
        name: String!,
    ): Permission @create(model: "App\\Models\\Permission")
    updatePermission(
        id: ID! @eq
        name: String!,
    ): Permission @update(model: "App\\Models\\Permission")
    deletePermission(
        id: ID! @eq
    ): Permission @delete(model: "App\\Models\\Permission")
    login(email: String!, password: String!): Login!
    logout: User @guard
}
type Login{
    token: String!
}


type User {
    id: ID!
    name: String!
    avatar: String
    email: String!
    roles: [Role!]! @belongsToMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Role {
    id: ID!
    name: String!
    permissions: [Permission!]! @belongsToMany
    users: [User!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type Permission {
    id: ID!
    name: String!
    roles: [Role!]! @belongsToMany
    created_at: DateTime!
    updated_at: DateTime!
}
